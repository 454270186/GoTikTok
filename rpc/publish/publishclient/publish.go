// Code generated by goctl. DO NOT EDIT.
// Source: publish.proto

package publishclient

import (
	"context"

	"github.com/454270186/GoTikTok/rpc/publish/types/publish"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PublishActionReq = publish.PublishActionReq
	PublishActionRes = publish.PublishActionRes
	PublishListReq   = publish.PublishListReq
	PublishListRes   = publish.PublishListRes
	User             = publish.User
	Video            = publish.Video

	Publish interface {
		PublishList(ctx context.Context, in *PublishListReq, opts ...grpc.CallOption) (*PublishListRes, error)
		PublishAction(ctx context.Context, in *PublishActionReq, opts ...grpc.CallOption) (*PublishActionRes, error)
	}

	defaultPublish struct {
		cli zrpc.Client
	}
)

func NewPublish(cli zrpc.Client) Publish {
	return &defaultPublish{
		cli: cli,
	}
}

func (m *defaultPublish) PublishList(ctx context.Context, in *PublishListReq, opts ...grpc.CallOption) (*PublishListRes, error) {
	client := publish.NewPublishClient(m.cli.Conn())
	return client.PublishList(ctx, in, opts...)
}

func (m *defaultPublish) PublishAction(ctx context.Context, in *PublishActionReq, opts ...grpc.CallOption) (*PublishActionRes, error) {
	client := publish.NewPublishClient(m.cli.Conn())
	return client.PublishAction(ctx, in, opts...)
}
